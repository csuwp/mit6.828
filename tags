!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	220;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	287;"	d	file:
CAPSLOCK	kern/console.c	222;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	390;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon3
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon3
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon3
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	219;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	226;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon7
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon7
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon7
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon7
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon7
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon7
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon7
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon7
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	87;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon7
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	216;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon6
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	223;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	84;"	d
O_CREAT	inc/lib.h	86;"	d
O_EXCL	inc/lib.h	88;"	d
O_MKDIR	inc/lib.h	89;"	d
O_RDONLY	inc/lib.h	81;"	d
O_RDWR	inc/lib.h	83;"	d
O_TRUNC	inc/lib.h	87;"	d
O_WRONLY	inc/lib.h	82;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Tue Oct 17 17:42:36 EDT 2017$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	74;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	224;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	218;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon6
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon6
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon6
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon6
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon6
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon6
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon6
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon6
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon6
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon6
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon6
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon6
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon6
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2017\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2017\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	86;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^            base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^            base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^            base = 8;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^            base = 8;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^            base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^            base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^            base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^            base = 8;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^            base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^            base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^            base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^            base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^            base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^            base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^            base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^            base = 8;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^        ebp = (uint32_t*) (*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^    envs = (struct Env *)boot_alloc( sizeof(struct Env)*NENV );$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 d0 11 00       	mov    $0x11d000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 d0 11 f0       	mov    $0xf011d000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 b0 00 00 00       	call   f01000ee <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	53                   	push   %ebx$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	68 a0 57 10 f0       	push   $0xf01057a0$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	e8 7a 35 00 00       	call   f01035cf <cprintf>$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	85 db                	test   %ebx,%ebx$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	7e 11                	jle    f010006d <test_backtrace+0x2d>$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	50                   	push   %eax$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 d8 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	83 c4 10             	add    $0x10,%esp$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	eb 11                	jmp    f010007e <test_backtrace+0x3e>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	6a 00                	push   $0x0$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	6a 00                	push   $0x0$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	6a 00                	push   $0x0$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	e8 3f 08 00 00       	call   f01008ba <mon_backtrace>$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	53                   	push   %ebx$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	68 bc 57 10 f0       	push   $0xf01057bc$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 43 35 00 00       	call   f01035cf <cprintf>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c9                   	leave  $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	c3                   	ret    $/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094 <_panic>:$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	55                   	push   %ebp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 e5                	mov    %esp,%ebp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	56                   	push   %esi$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	53                   	push   %ebx$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	83 3d 00 af 22 f0 00 	cmpl   $0x0,0xf022af00$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	75 3a                	jne    f01000df <_panic+0x4b>$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	89 35 00 af 22 f0    	mov    %esi,0xf022af00$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	fa                   	cli    $/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	fc                   	cld    $/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	e8 5d 50 00 00       	call   f0105112 <cpunum>$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	50                   	push   %eax$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	68 3c 58 10 f0       	push   $0xf010583c$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	e8 09 35 00 00       	call   f01035cf <cprintf>$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	53                   	push   %ebx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	56                   	push   %esi$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	e8 d9 34 00 00       	call   f01035a9 <vcprintf>$/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	c7 04 24 55 69 10 f0 	movl   $0xf0106955,(%esp)$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	e8 f3 34 00 00       	call   f01035cf <cprintf>$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	6a 00                	push   $0x0$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	e8 5a 08 00 00       	call   f0100943 <monitor>$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	eb f1                	jmp    f01000df <_panic+0x4b>$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee <i386_init>:$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	55                   	push   %ebp$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	53                   	push   %ebx$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	b8 08 c0 26 f0       	mov    $0xf026c008,%eax$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	2d 78 95 22 f0       	sub    $0xf0229578,%eax$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	50                   	push   %eax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	6a 00                	push   $0x0$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	68 78 95 22 f0       	push   $0xf0229578$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	e8 e3 49 00 00       	call   f0104aef <memset>$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	e8 71 05 00 00       	call   f0100682 <cons_init>$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	68 d7 57 10 f0       	push   $0xf01057d7$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	e8 ac 34 00 00       	call   f01035cf <cprintf>$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	e8 81 11 00 00       	call   f01012a9 <mem_init>$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	e8 fc 2c 00 00       	call   f0102e29 <env_init>$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	e8 17 35 00 00       	call   f0103649 <trap_init>$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	e8 d1 4c 00 00       	call   f0104e08 <mp_init>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	e8 f1 4f 00 00       	call   f010512d <lapic_init>$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	e8 b5 33 00 00       	call   f01034f6 <pic_init>$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	83 3d 08 af 22 f0 07 	cmpl   $0x7,0xf022af08$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	77 16                	ja     f0100163 <i386_init+0x75>$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	6a 5e                	push   $0x5e$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	68 f2 57 10 f0       	push   $0xf01057f2$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	e8 31 ff ff ff       	call   f0100094 <_panic>$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	b8 6e 4d 10 f0       	mov    $0xf0104d6e,%eax$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	2d f4 4c 10 f0       	sub    $0xf0104cf4,%eax$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	50                   	push   %eax$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	68 f4 4c 10 f0       	push   $0xf0104cf4$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	e8 bc 49 00 00       	call   f0104b3c <memmove>$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	bb 20 b0 22 f0       	mov    $0xf022b020,%ebx$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	eb 4d                	jmp    f01001d7 <i386_init+0xe9>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	e8 83 4f 00 00       	call   f0105112 <cpunum>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	74 39                	je     f01001d4 <i386_init+0xe6>$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	89 d8                	mov    %ebx,%eax$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	2d 20 b0 22 f0       	sub    $0xf022b020,%eax$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	05 00 40 23 f0       	add    $0xf0234000,%eax$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	a3 04 af 22 f0       	mov    %eax,0xf022af04$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	68 00 70 00 00       	push   $0x7000$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	50                   	push   %eax$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	e8 b2 50 00 00       	call   f010527b <lapic_startap>$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	75 f8                	jne    f01001cc <i386_init+0xde>$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	6b 05 c4 b3 22 f0 74 	imul   $0x74,0xf022b3c4,%eax$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	72 a3                	jb     f010018a <i386_init+0x9c>$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	68 fe 57 10 f0       	push   $0xf01057fe$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	e8 db 33 00 00       	call   f01035cf <cprintf>$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	83 c4 04             	add    $0x4,%esp$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	ff 35 48 a2 22 f0    	pushl  0xf022a248$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	e8 b1 31 00 00       	call   f01033b3 <env_run>$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202 <mp_main>:$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	55                   	push   %ebp$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	89 e5                	mov    %esp,%ebp$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	77 12                	ja     f0100226 <mp_main+0x24>$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	50                   	push   %eax$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	68 84 58 10 f0       	push   $0xf0105884$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	6a 79                	push   $0x79$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	68 f2 57 10 f0       	push   $0xf01057f2$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	e8 6e fe ff ff       	call   f0100094 <_panic>$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	e8 df 4e 00 00       	call   f0105112 <cpunum>$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	50                   	push   %eax$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	68 0a 58 10 f0       	push   $0xf010580a$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	e8 8e 33 00 00       	call   f01035cf <cprintf>$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	e8 e7 4e 00 00       	call   f010512d <lapic_init>$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	e8 ae 2b 00 00       	call   f0102df9 <env_init_percpu>$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	e8 93 33 00 00       	call   f01035e3 <trap_init_percpu>$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	e8 bd 4e 00 00       	call   f0105112 <cpunum>$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	81 c2 20 b0 22 f0    	add    $0xf022b020,%edx$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 c4 10             	add    $0x10,%esp$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	eb fe                	jmp    f010026a <mp_main+0x68>$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c <_warn>:$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	55                   	push   %ebp$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	89 e5                	mov    %esp,%ebp$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	53                   	push   %ebx$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	68 20 58 10 f0       	push   $0xf0105820$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	e8 49 33 00 00       	call   f01035cf <cprintf>$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	53                   	push   %ebx$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	e8 17 33 00 00       	call   f01035a9 <vcprintf>$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	c7 04 24 55 69 10 f0 	movl   $0xf0106955,(%esp)$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	e8 31 33 00 00       	call   f01035cf <cprintf>$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	c9                   	leave  $/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	c3                   	ret    $/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6 <serial_proc_data>:$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	55                   	push   %ebp$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	ec                   	in     (%dx),%al$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	a8 01                	test   $0x1,%al$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	74 0b                	je     f01002be <serial_proc_data+0x18>$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	ec                   	in     (%dx),%al$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	eb 05                	jmp    f01002c3 <serial_proc_data+0x1d>$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	5d                   	pop    %ebp$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	c3                   	ret    $/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5 <cons_intr>:$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	55                   	push   %ebp$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	53                   	push   %ebx$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	89 c3                	mov    %eax,%ebx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	eb 2b                	jmp    f01002fb <cons_intr+0x36>$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	85 c0                	test   %eax,%eax$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	74 27                	je     f01002fb <cons_intr+0x36>$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	8b 0d 24 a2 22 f0    	mov    0xf022a224,%ecx$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	89 15 24 a2 22 f0    	mov    %edx,0xf022a224$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	88 81 20 a0 22 f0    	mov    %al,-0xfdd5fe0(%ecx)$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	75 0a                	jne    f01002fb <cons_intr+0x36>$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	c7 05 24 a2 22 f0 00 	movl   $0x0,0xf022a224$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	00 00 00 $/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	ff d3                	call   *%ebx$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	75 ce                	jne    f01002d0 <cons_intr+0xb>$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	5b                   	pop    %ebx$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	5d                   	pop    %ebp$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	c3                   	ret    $/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308 <kbd_proc_data>:$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	ec                   	in     (%dx),%al$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	a8 01                	test   $0x1,%al$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	0f 84 f8 00 00 00    	je     f010040e <kbd_proc_data+0x106>$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	a8 20                	test   $0x20,%al$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	0f 85 f6 00 00 00    	jne    f0100414 <kbd_proc_data+0x10c>$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	ec                   	in     (%dx),%al$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	89 c2                	mov    %eax,%edx$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	75 0d                	jne    f0100337 <kbd_proc_data+0x2f>$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	83 0d 00 a0 22 f0 40 	orl    $0x40,0xf022a000$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	c3                   	ret    $/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	55                   	push   %ebp$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	89 e5                	mov    %esp,%ebp$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	53                   	push   %ebx$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	84 c0                	test   %al,%al$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	79 36                	jns    f0100378 <kbd_proc_data+0x70>$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	8b 0d 00 a0 22 f0    	mov    0xf022a000,%ecx$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	89 cb                	mov    %ecx,%ebx$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	85 db                	test   %ebx,%ebx$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	0f b6 82 00 5a 10 f0 	movzbl -0xfefa600(%edx),%eax$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	f7 d0                	not    %eax$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	21 c8                	and    %ecx,%eax$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	a3 00 a0 22 f0       	mov    %eax,0xf022a000$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	e9 a4 00 00 00       	jmp    f010041c <kbd_proc_data+0x114>$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	8b 0d 00 a0 22 f0    	mov    0xf022a000,%ecx$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	74 0e                	je     f0100391 <kbd_proc_data+0x89>$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	89 c2                	mov    %eax,%edx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	89 0d 00 a0 22 f0    	mov    %ecx,0xf022a000$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	0f b6 82 00 5a 10 f0 	movzbl -0xfefa600(%edx),%eax$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	0b 05 00 a0 22 f0    	or     0xf022a000,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	0f b6 8a 00 59 10 f0 	movzbl -0xfefa700(%edx),%ecx$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	31 c8                	xor    %ecx,%eax$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	a3 00 a0 22 f0       	mov    %eax,0xf022a000$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	89 c1                	mov    %eax,%ecx$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	8b 0c 8d e0 58 10 f0 	mov    -0xfefa720(,%ecx,4),%ecx$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	a8 08                	test   $0x8,%al$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	74 1b                	je     f01003e1 <kbd_proc_data+0xd9>$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	89 da                	mov    %ebx,%edx$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	77 05                	ja     f01003d5 <kbd_proc_data+0xcd>$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	eb 0c                	jmp    f01003e1 <kbd_proc_data+0xd9>$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	f7 d0                	not    %eax$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	a8 06                	test   $0x6,%al$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	75 33                	jne    f010041a <kbd_proc_data+0x112>$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	75 2b                	jne    f010041a <kbd_proc_data+0x112>$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	68 a8 58 10 f0       	push   $0xf01058a8$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	e8 d3 31 00 00       	call   f01035cf <cprintf>$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	ee                   	out    %al,(%dx)$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	83 c4 10             	add    $0x10,%esp$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 d8                	mov    %ebx,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	eb 0e                	jmp    f010041c <kbd_proc_data+0x114>$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	c3                   	ret    $/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	c3                   	ret    $/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	89 d8                	mov    %ebx,%eax$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	c9                   	leave  $/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	c3                   	ret    $/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421 <cons_putc>:$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	55                   	push   %ebp$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	89 e5                	mov    %esp,%ebp$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	57                   	push   %edi$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	56                   	push   %esi$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	53                   	push   %ebx$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	89 c7                	mov    %eax,%edi$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	eb 09                	jmp    f0100446 <cons_putc+0x25>$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	89 ca                	mov    %ecx,%edx$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	ec                   	in     (%dx),%al$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	ec                   	in     (%dx),%al$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	ec                   	in     (%dx),%al$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	ec                   	in     (%dx),%al$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	89 f2                	mov    %esi,%edx$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	ec                   	in     (%dx),%al$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	a8 20                	test   $0x20,%al$/;"	l
f010044b	obj/kern/kernel.asm	/^f010044b:	75 08                	jne    f0100455 <cons_putc+0x34>$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	7e e8                	jle    f010043d <cons_putc+0x1c>$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	89 f8                	mov    %edi,%eax$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	ee                   	out    %al,(%dx)$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	eb 09                	jmp    f010047a <cons_putc+0x59>$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	89 ca                	mov    %ecx,%edx$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	ec                   	in     (%dx),%al$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	ec                   	in     (%dx),%al$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	ec                   	in     (%dx),%al$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	ec                   	in     (%dx),%al$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	89 f2                	mov    %esi,%edx$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	ec                   	in     (%dx),%al$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	7f 04                	jg     f0100489 <cons_putc+0x68>$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	84 c0                	test   %al,%al$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	79 e8                	jns    f0100471 <cons_putc+0x50>$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	ee                   	out    %al,(%dx)$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	ee                   	out    %al,(%dx)$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	ee                   	out    %al,(%dx)$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	89 fa                	mov    %edi,%edx$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 f8                	mov    %edi,%eax$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	85 d2                	test   %edx,%edx$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	89 f8                	mov    %edi,%eax$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	74 74                	je     f0100534 <cons_putc+0x113>$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	7f 0a                	jg     f01004cf <cons_putc+0xae>$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	74 14                	je     f01004de <cons_putc+0xbd>$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	e9 99 00 00 00       	jmp    f0100568 <cons_putc+0x147>$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	74 3a                	je     f010050e <cons_putc+0xed>$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	74 3d                	je     f0100516 <cons_putc+0xf5>$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	e9 8a 00 00 00       	jmp    f0100568 <cons_putc+0x147>$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	0f b7 05 28 a2 22 f0 	movzwl 0xf022a228,%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	66 85 c0             	test   %ax,%ax$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	0f 84 e6 00 00 00    	je     f01005d4 <cons_putc+0x1b3>$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	66 a3 28 a2 22 f0    	mov    %ax,0xf022a228$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	8b 15 2c a2 22 f0    	mov    0xf022a22c,%edx$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	eb 78                	jmp    f0100586 <cons_putc+0x165>$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	66 83 05 28 a2 22 f0 	addw   $0x50,0xf022a228$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	50 $/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	0f b7 05 28 a2 22 f0 	movzwl 0xf022a228,%eax$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	66 a3 28 a2 22 f0    	mov    %ax,0xf022a228$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	eb 52                	jmp    f0100586 <cons_putc+0x165>$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	e8 e3 fe ff ff       	call   f0100421 <cons_putc>$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	e8 d9 fe ff ff       	call   f0100421 <cons_putc>$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	e8 cf fe ff ff       	call   f0100421 <cons_putc>$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	e8 c5 fe ff ff       	call   f0100421 <cons_putc>$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	e8 bb fe ff ff       	call   f0100421 <cons_putc>$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	eb 1e                	jmp    f0100586 <cons_putc+0x165>$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	0f b7 05 28 a2 22 f0 	movzwl 0xf022a228,%eax$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	66 89 15 28 a2 22 f0 	mov    %dx,0xf022a228$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	8b 15 2c a2 22 f0    	mov    0xf022a22c,%edx$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	66 81 3d 28 a2 22 f0 	cmpw   $0x7cf,0xf022a228$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	cf 07 $/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	76 43                	jbe    f01005d4 <cons_putc+0x1b3>$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	a1 2c a2 22 f0       	mov    0xf022a22c,%eax$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	52                   	push   %edx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	50                   	push   %eax$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	e8 91 45 00 00       	call   f0104b3c <memmove>$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	8b 15 2c a2 22 f0    	mov    0xf022a22c,%edx$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	83 c0 02             	add    $0x2,%eax$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	39 d0                	cmp    %edx,%eax$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	75 f4                	jne    f01005c0 <cons_putc+0x19f>$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	66 83 2d 28 a2 22 f0 	subw   $0x50,0xf022a228$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	50 $/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	8b 0d 30 a2 22 f0    	mov    0xf022a230,%ecx$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	89 ca                	mov    %ecx,%edx$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	ee                   	out    %al,(%dx)$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	0f b7 1d 28 a2 22 f0 	movzwl 0xf022a228,%ebx$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	89 d8                	mov    %ebx,%eax$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	89 f2                	mov    %esi,%edx$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	ee                   	out    %al,(%dx)$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	89 ca                	mov    %ecx,%edx$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	ee                   	out    %al,(%dx)$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	89 d8                	mov    %ebx,%eax$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	89 f2                	mov    %esi,%edx$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	ee                   	out    %al,(%dx)$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	5b                   	pop    %ebx$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	5e                   	pop    %esi$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	5f                   	pop    %edi$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	5d                   	pop    %ebp$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	c3                   	ret    $/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a <serial_intr>:$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	80 3d 34 a2 22 f0 00 	cmpb   $0x0,0xf022a234$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	74 11                	je     f0100624 <serial_intr+0x1a>$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	55                   	push   %ebp$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	89 e5                	mov    %esp,%ebp$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	b8 a6 02 10 f0       	mov    $0xf01002a6,%eax$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	e8 a2 fc ff ff       	call   f01002c5 <cons_intr>$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	c9                   	leave  $/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	f3 c3                	repz ret $/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626 <kbd_intr>:$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	55                   	push   %ebp$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	89 e5                	mov    %esp,%ebp$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	b8 08 03 10 f0       	mov    $0xf0100308,%eax$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	e8 8f fc ff ff       	call   f01002c5 <cons_intr>$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c9                   	leave  $/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	c3                   	ret    $/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638 <cons_getc>:$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	55                   	push   %ebp$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	89 e5                	mov    %esp,%ebp$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	e8 c7 ff ff ff       	call   f010060a <serial_intr>$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	e8 de ff ff ff       	call   f0100626 <kbd_intr>$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	a1 20 a2 22 f0       	mov    0xf022a220,%eax$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	3b 05 24 a2 22 f0    	cmp    0xf022a224,%eax$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	74 26                	je     f010067b <cons_getc+0x43>$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	89 15 20 a2 22 f0    	mov    %edx,0xf022a220$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	0f b6 88 20 a0 22 f0 	movzbl -0xfdd5fe0(%eax),%ecx$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	89 c8                	mov    %ecx,%eax$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	75 11                	jne    f0100680 <cons_getc+0x48>$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	c7 05 20 a2 22 f0 00 	movl   $0x0,0xf022a220$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	00 00 00 $/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	eb 05                	jmp    f0100680 <cons_getc+0x48>$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	c9                   	leave  $/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	c3                   	ret    $/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682 <cons_init>:$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	55                   	push   %ebp$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	89 e5                	mov    %esp,%ebp$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	57                   	push   %edi$/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	56                   	push   %esi$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	53                   	push   %ebx$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	5a a5 $/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	74 11                	je     f01006b9 <cons_init+0x37>$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	c7 05 30 a2 22 f0 b4 	movl   $0x3b4,0xf022a230$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	03 00 00 $/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	eb 16                	jmp    f01006cf <cons_init+0x4d>$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	c7 05 30 a2 22 f0 d4 	movl   $0x3d4,0xf022a230$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	03 00 00 $/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	8b 3d 30 a2 22 f0    	mov    0xf022a230,%edi$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	89 fa                	mov    %edi,%edx$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	ee                   	out    %al,(%dx)$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	89 da                	mov    %ebx,%edx$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	ec                   	in     (%dx),%al$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	89 fa                	mov    %edi,%edx$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	ee                   	out    %al,(%dx)$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	89 da                	mov    %ebx,%edx$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	ec                   	in     (%dx),%al$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	89 35 2c a2 22 f0    	mov    %esi,0xf022a22c$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	09 c8                	or     %ecx,%eax$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	66 a3 28 a2 22 f0    	mov    %ax,0xf022a228$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	e8 1c ff ff ff       	call   f0100626 <kbd_intr>$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	0f b7 05 88 f3 11 f0 	movzwl 0xf011f388,%eax$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	50                   	push   %eax$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	e8 5f 2d 00 00       	call   f010347e <irq_setmask_8259A>$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	89 f2                	mov    %esi,%edx$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ee                   	out    %al,(%dx)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	ee                   	out    %al,(%dx)$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	89 da                	mov    %ebx,%edx$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	ee                   	out    %al,(%dx)$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	ee                   	out    %al,(%dx)$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	ee                   	out    %al,(%dx)$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	ee                   	out    %al,(%dx)$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	ee                   	out    %al,(%dx)$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	ec                   	in     (%dx),%al$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	89 c1                	mov    %eax,%ecx$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	83 c4 10             	add    $0x10,%esp$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	3c ff                	cmp    $0xff,%al$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	0f 95 05 34 a2 22 f0 	setne  0xf022a234$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	89 f2                	mov    %esi,%edx$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	ec                   	in     (%dx),%al$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	89 da                	mov    %ebx,%edx$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	ec                   	in     (%dx),%al$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	75 10                	jne    f010079f <cons_init+0x11d>$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	68 b4 58 10 f0       	push   $0xf01058b4$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	e8 33 2e 00 00       	call   f01035cf <cprintf>$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	5b                   	pop    %ebx$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	5e                   	pop    %esi$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	5f                   	pop    %edi$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	5d                   	pop    %ebp$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	c3                   	ret    $/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7 <cputchar>:$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	55                   	push   %ebp$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	e8 6c fc ff ff       	call   f0100421 <cons_putc>$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	c9                   	leave  $/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	c3                   	ret    $/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7 <getchar>:$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	55                   	push   %ebp$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	e8 76 fe ff ff       	call   f0100638 <cons_getc>$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	85 c0                	test   %eax,%eax$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	74 f7                	je     f01007bd <getchar+0x6>$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	c9                   	leave  $/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	c3                   	ret    $/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8 <iscons>:$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	55                   	push   %ebp$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	5d                   	pop    %ebp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	c3                   	ret    $/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2 <mon_help>:$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	55                   	push   %ebp$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	68 00 5b 10 f0       	push   $0xf0105b00$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	68 1e 5b 10 f0       	push   $0xf0105b1e$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	68 23 5b 10 f0       	push   $0xf0105b23$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	e8 e3 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	68 bc 5b 10 f0       	push   $0xf0105bbc$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	68 2c 5b 10 f0       	push   $0xf0105b2c$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	68 23 5b 10 f0       	push   $0xf0105b23$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	e8 cc 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	c9                   	leave  $/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	c3                   	ret    $/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a <mon_kerninfo>:$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	55                   	push   %ebp$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	89 e5                	mov    %esp,%ebp$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	68 35 5b 10 f0       	push   $0xf0105b35$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	e8 b5 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	68 e4 5b 10 f0       	push   $0xf0105be4$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	e8 a3 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	68 0c 5c 10 f0       	push   $0xf0105c0c$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	e8 8c 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	68 91 57 10 00       	push   $0x105791$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	68 91 57 10 f0       	push   $0xf0105791$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	68 30 5c 10 f0       	push   $0xf0105c30$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	e8 75 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	68 78 95 22 00       	push   $0x229578$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	68 78 95 22 f0       	push   $0xf0229578$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	68 54 5c 10 f0       	push   $0xf0105c54$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	e8 5e 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	68 08 c0 26 00       	push   $0x26c008$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	68 08 c0 26 f0       	push   $0xf026c008$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	68 78 5c 10 f0       	push   $0xf0105c78$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	e8 47 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	b8 07 c4 26 f0       	mov    $0xf026c407,%eax$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	85 c0                	test   %eax,%eax$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	50                   	push   %eax$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	68 9c 5c 10 f0       	push   $0xf0105c9c$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	e8 1c 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	c9                   	leave  $/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	c3                   	ret    $/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba <mon_backtrace>:$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	55                   	push   %ebp$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	57                   	push   %edi$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	56                   	push   %esi$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	53                   	push   %ebx$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	89 ee                	mov    %ebp,%esi$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	68 4e 5b 10 f0       	push   $0xf0105b4e$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	e8 00 2d 00 00       	call   f01035cf <cprintf>$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	eb 5e                	jmp    f0100932 <mon_backtrace+0x78>$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	56                   	push   %esi$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	68 5f 5b 10 f0       	push   $0xf0105b5f$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	e8 ed 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	68 6a 5b 10 f0       	push   $0xf0105b6a$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	e8 dd 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	c7 04 24 75 5b 10 f0 	movl   $0xf0105b75,(%esp)$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	e8 d1 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	ff 33                	pushl  (%ebx)$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	68 64 5b 10 f0       	push   $0xf0105b64$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	e8 b9 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	83 c4 10             	add    $0x10,%esp$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	39 fb                	cmp    %edi,%ebx$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	75 e7                	jne    f0100907 <mon_backtrace+0x4d>$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	68 55 69 10 f0       	push   $0xf0106955$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	e8 a2 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	8b 36                	mov    (%esi),%esi$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	85 f6                	test   %esi,%esi$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	75 9e                	jne    f01008d4 <mon_backtrace+0x1a>$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	5b                   	pop    %ebx$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	5e                   	pop    %esi$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	5f                   	pop    %edi$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	5d                   	pop    %ebp$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	c3                   	ret    $/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943 <monitor>:$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	55                   	push   %ebp$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	89 e5                	mov    %esp,%ebp$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	57                   	push   %edi$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	56                   	push   %esi$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	53                   	push   %ebx$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	83 ec 58             	sub    $0x58,%esp$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	68 c8 5c 10 f0       	push   $0xf0105cc8$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	e8 79 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	c7 04 24 ec 5c 10 f0 	movl   $0xf0105cec,(%esp)$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	e8 6d 2c 00 00       	call   f01035cf <cprintf>$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	74 0e                	je     f0100979 <monitor+0x36>$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	e8 9c 30 00 00       	call   f0103a12 <print_trapframe>$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	68 7d 5b 10 f0       	push   $0xf0105b7d$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	e8 12 3f 00 00       	call   f0104898 <readline>$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	89 c3                	mov    %eax,%ebx$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	83 c4 10             	add    $0x10,%esp$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	85 c0                	test   %eax,%eax$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	74 ea                	je     f0100979 <monitor+0x36>$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	eb 0a                	jmp    f01009a7 <monitor+0x64>$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	89 f7                	mov    %esi,%edi$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	89 fe                	mov    %edi,%esi$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	84 c0                	test   %al,%al$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	74 63                	je     f0100a11 <monitor+0xce>$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	0f be c0             	movsbl %al,%eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	50                   	push   %eax$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	68 81 5b 10 f0       	push   $0xf0105b81$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	e8 f3 40 00 00       	call   f0104ab2 <strchr>$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	85 c0                	test   %eax,%eax$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	75 d7                	jne    f010099d <monitor+0x5a>$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	74 46                	je     f0100a11 <monitor+0xce>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	75 14                	jne    f01009e4 <monitor+0xa1>$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	6a 10                	push   $0x10$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	68 86 5b 10 f0       	push   $0xf0105b86$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	e8 f0 2b 00 00       	call   f01035cf <cprintf>$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	eb 95                	jmp    f0100979 <monitor+0x36>$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	eb 03                	jmp    f01009f0 <monitor+0xad>$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	84 c0                	test   %al,%al$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	74 ae                	je     f01009a5 <monitor+0x62>$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	0f be c0             	movsbl %al,%eax$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	50                   	push   %eax$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	68 81 5b 10 f0       	push   $0xf0105b81$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	e8 aa 40 00 00       	call   f0104ab2 <strchr>$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	85 c0                	test   %eax,%eax$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	74 de                	je     f01009ed <monitor+0xaa>$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	eb 94                	jmp    f01009a5 <monitor+0x62>$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	00 $/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	85 f6                	test   %esi,%esi$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	0f 84 58 ff ff ff    	je     f0100979 <monitor+0x36>$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	68 1e 5b 10 f0       	push   $0xf0105b1e$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	e8 23 40 00 00       	call   f0104a54 <strcmp>$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	85 c0                	test   %eax,%eax$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	74 1e                	je     f0100a56 <monitor+0x113>$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	68 2c 5b 10 f0       	push   $0xf0105b2c$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	e8 0c 40 00 00       	call   f0104a54 <strcmp>$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	85 c0                	test   %eax,%eax$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	75 2f                	jne    f0100a7e <monitor+0x13b>$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	eb 05                	jmp    f0100a5b <monitor+0x118>$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	01 d0                	add    %edx,%eax$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	51                   	push   %ecx$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	56                   	push   %esi$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	ff 14 85 1c 5d 10 f0 	call   *-0xfefa2e4(,%eax,4)$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	85 c0                	test   %eax,%eax$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	78 1d                	js     f0100a96 <monitor+0x153>$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	e9 fb fe ff ff       	jmp    f0100979 <monitor+0x36>$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	68 a3 5b 10 f0       	push   $0xf0105ba3$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	e8 41 2b 00 00       	call   f01035cf <cprintf>$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	e9 e3 fe ff ff       	jmp    f0100979 <monitor+0x36>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	5b                   	pop    %ebx$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	5e                   	pop    %esi$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	5f                   	pop    %edi$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	5d                   	pop    %ebp$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	c3                   	ret    $/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e <boot_alloc>:$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	55                   	push   %ebp$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	83 3d 38 a2 22 f0 00 	cmpl   $0x0,0xf022a238$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	75 11                	jne    f0100abb <boot_alloc+0x1d>$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	ba 07 d0 26 f0       	mov    $0xf026d007,%edx$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	89 15 38 a2 22 f0    	mov    %edx,0xf022a238$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	8b 0d 38 a2 22 f0    	mov    0xf022a238,%ecx$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	8d 94 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%edx$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	89 15 38 a2 22 f0    	mov    %edx,0xf022a238$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	89 c8                	mov    %ecx,%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	5d                   	pop    %ebp$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	c3                   	ret    $/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8 <nvram_read>:$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	55                   	push   %ebp$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	56                   	push   %esi$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	53                   	push   %ebx$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	89 c3                	mov    %eax,%ebx$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	50                   	push   %eax$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	e8 68 29 00 00       	call   f0103450 <mc146818_read>$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	89 c6                	mov    %eax,%esi$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	e8 5b 29 00 00       	call   f0103450 <mc146818_read>$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	09 f0                	or     %esi,%eax$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	5b                   	pop    %ebx$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	5e                   	pop    %esi$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	5d                   	pop    %ebp$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	c3                   	ret    $/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01 <check_va2pa>:$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	89 d1                	mov    %edx,%ecx$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	a8 01                	test   $0x1,%al$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	74 52                	je     f0100b5f <check_va2pa+0x5e>$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	3b 0d 08 af 22 f0    	cmp    0xf022af08,%ecx$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	72 1b                	jb     f0100b3a <check_va2pa+0x39>$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	55                   	push   %ebp$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	50                   	push   %eax$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	68 78 03 00 00       	push   $0x378$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	e8 5a f5 ff ff       	call   f0100094 <_panic>$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	89 c2                	mov    %eax,%edx$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	85 d2                	test   %edx,%edx$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	c3                   	ret    $/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	c3                   	ret    $/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65 <check_page_free_list>:$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	55                   	push   %ebp$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	57                   	push   %edi$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	56                   	push   %esi$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	53                   	push   %ebx$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	84 c0                	test   %al,%al$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	0f 85 a0 02 00 00    	jne    f0100e16 <check_page_free_list+0x2b1>$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	e9 ad 02 00 00       	jmp    f0100e28 <check_page_free_list+0x2c3>$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	68 2c 5d 10 f0       	push   $0xf0105d2c$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	68 ab 02 00 00       	push   $0x2ab$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	e8 02 f5 ff ff       	call   f0100094 <_panic>$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	89 c2                	mov    %eax,%edx$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	0f 95 c2             	setne  %dl$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	8b 00                	mov    (%eax),%eax$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	85 c0                	test   %eax,%eax$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	75 dc                	jne    f0100b9e <check_page_free_list+0x39>$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	89 10                	mov    %edx,(%eax)$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	8b 1d 40 a2 22 f0    	mov    0xf022a240,%ebx$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	eb 53                	jmp    f0100c3b <check_page_free_list+0xd6>$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	89 d8                	mov    %ebx,%eax$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	89 c2                	mov    %eax,%edx$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	39 f2                	cmp    %esi,%edx$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	73 3a                	jae    f0100c39 <check_page_free_list+0xd4>$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	89 c2                	mov    %eax,%edx$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	72 12                	jb     f0100c1e <check_page_free_list+0xb9>$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	50                   	push   %eax$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	6a 58                	push   $0x58$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	68 81 66 10 f0       	push   $0xf0106681$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	e8 76 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	68 80 00 00 00       	push   $0x80$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	68 97 00 00 00       	push   $0x97$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	50                   	push   %eax$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	e8 b9 3e 00 00       	call   f0104aef <memset>$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	85 db                	test   %ebx,%ebx$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	75 a9                	jne    f0100be8 <check_page_free_list+0x83>$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	e8 55 fe ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	8b 15 40 a2 22 f0    	mov    0xf022a240,%edx$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	8b 0d 10 af 22 f0    	mov    0xf022af10,%ecx$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	a1 08 af 22 f0       	mov    0xf022af08,%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	e9 52 01 00 00       	jmp    f0100dc5 <check_page_free_list+0x260>$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	73 19                	jae    f0100c90 <check_page_free_list+0x12b>$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	68 8f 66 10 f0       	push   $0xf010668f$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	68 c5 02 00 00       	push   $0x2c5$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	e8 04 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	72 19                	jb     f0100cae <check_page_free_list+0x149>$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	68 b0 66 10 f0       	push   $0xf01066b0$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	68 c6 02 00 00       	push   $0x2c6$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	e8 e6 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	89 d0                	mov    %edx,%eax$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	a8 07                	test   $0x7,%al$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	74 19                	je     f0100cd0 <check_page_free_list+0x16b>$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	68 50 5d 10 f0       	push   $0xf0105d50$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	68 c7 02 00 00       	push   $0x2c7$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	e8 c4 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	85 c0                	test   %eax,%eax$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	75 19                	jne    f0100cf3 <check_page_free_list+0x18e>$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	68 c4 66 10 f0       	push   $0xf01066c4$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	68 ca 02 00 00       	push   $0x2ca$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	e8 a1 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	75 19                	jne    f0100d13 <check_page_free_list+0x1ae>$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	68 d5 66 10 f0       	push   $0xf01066d5$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	68 cb 02 00 00       	push   $0x2cb$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	e8 81 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	75 19                	jne    f0100d33 <check_page_free_list+0x1ce>$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	68 84 5d 10 f0       	push   $0xf0105d84$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	68 cc 02 00 00       	push   $0x2cc$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	e8 61 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	75 19                	jne    f0100d53 <check_page_free_list+0x1ee>$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	68 ee 66 10 f0       	push   $0xf01066ee$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	68 cd 02 00 00       	push   $0x2cd$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	e8 41 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	0f 86 f1 00 00 00    	jbe    f0100e4f <check_page_free_list+0x2ea>$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	89 c7                	mov    %eax,%edi$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	77 12                	ja     f0100d7a <check_page_free_list+0x215>$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	50                   	push   %eax$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	6a 58                	push   $0x58$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	68 81 66 10 f0       	push   $0xf0106681$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	e8 1a f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	0f 86 b6 00 00 00    	jbe    f0100e3f <check_page_free_list+0x2da>$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	68 a8 5d 10 f0       	push   $0xf0105da8$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	68 ce 02 00 00       	push   $0x2ce$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	e8 f2 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	68 08 67 10 f0       	push   $0xf0106708$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	68 d0 02 00 00       	push   $0x2d0$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	e8 d9 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	eb 03                	jmp    f0100dc3 <check_page_free_list+0x25e>$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	8b 12                	mov    (%edx),%edx$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	85 d2                	test   %edx,%edx$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	0f 85 a6 fe ff ff    	jne    f0100c73 <check_page_free_list+0x10e>$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	85 f6                	test   %esi,%esi$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	7f 19                	jg     f0100dea <check_page_free_list+0x285>$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	68 25 67 10 f0       	push   $0xf0106725$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	68 d8 02 00 00       	push   $0x2d8$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	e8 aa f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	85 db                	test   %ebx,%ebx$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	7f 19                	jg     f0100e07 <check_page_free_list+0x2a2>$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	68 37 67 10 f0       	push   $0xf0106737$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	68 9b 66 10 f0       	push   $0xf010669b$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	68 d9 02 00 00       	push   $0x2d9$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	e8 8d f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	68 f0 5d 10 f0       	push   $0xf0105df0$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	e8 bb 27 00 00       	call   f01035cf <cprintf>$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	eb 49                	jmp    f0100e5f <check_page_free_list+0x2fa>$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	a1 40 a2 22 f0       	mov    0xf022a240,%eax$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	85 c0                	test   %eax,%eax$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	0f 85 6f fd ff ff    	jne    f0100b92 <check_page_free_list+0x2d>$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	e9 53 fd ff ff       	jmp    f0100b7b <check_page_free_list+0x16>$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	83 3d 40 a2 22 f0 00 	cmpl   $0x0,0xf022a240$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	0f 84 46 fd ff ff    	je     f0100b7b <check_page_free_list+0x16>$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	e9 a1 fd ff ff       	jmp    f0100be0 <check_page_free_list+0x7b>$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	0f 85 76 ff ff ff    	jne    f0100dc0 <check_page_free_list+0x25b>$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	e9 53 ff ff ff       	jmp    f0100da2 <check_page_free_list+0x23d>$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	0f 85 61 ff ff ff    	jne    f0100dbb <check_page_free_list+0x256>$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	e9 43 ff ff ff       	jmp    f0100da2 <check_page_free_list+0x23d>$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	5b                   	pop    %ebx$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	5e                   	pop    %esi$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	5f                   	pop    %edi$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	5d                   	pop    %ebp$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	c3                   	ret    $/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67 <page_init>:$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	55                   	push   %ebp$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	57                   	push   %edi$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	56                   	push   %esi$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	53                   	push   %ebx$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	e9 a7 00 00 00       	jmp    f0100f23 <page_init+0xbc>$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	85 db                	test   %ebx,%ebx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	75 19                	jne    f0100e99 <page_init+0x32>$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	89 f0                	mov    %esi,%eax$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	e9 84 00 00 00       	jmp    f0100f1d <page_init+0xb6>$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	3b 3d 44 a2 22 f0    	cmp    0xf022a244,%edi$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	73 25                	jae    f0100ec6 <page_init+0x5f>$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	89 f0                	mov    %esi,%eax$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	8b 15 40 a2 22 f0    	mov    0xf022a240,%edx$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	89 10                	mov    %edx,(%eax)$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	89 f0                	mov    %esi,%eax$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	eb 57                	jmp    f0100f1d <page_init+0xb6>$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	81 fb 00 01 00 00    	cmp    $0x100,%ebx$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	7e 16                	jle    f0100ee4 <page_init+0x7d>$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	e8 c6 fb ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	39 c7                	cmp    %eax,%edi$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	73 16                	jae    f0100efa <page_init+0x93>$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	89 f0                	mov    %esi,%eax$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	eb 23                	jmp    f0100f1d <page_init+0xb6>$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 f0                	mov    %esi,%eax$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	8b 15 40 a2 22 f0    	mov    0xf022a240,%edx$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	89 f0                	mov    %esi,%eax$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	83 c6 08             	add    $0x8,%esi$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	89 df                	mov    %ebx,%edi$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	3b 1d 08 af 22 f0    	cmp    0xf022af08,%ebx$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	0f 82 4b ff ff ff    	jb     f0100e7c <page_init+0x15>$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	5b                   	pop    %ebx$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	5e                   	pop    %esi$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	5f                   	pop    %edi$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	5d                   	pop    %ebp$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	c3                   	ret    $/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36 <page_alloc>:$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	55                   	push   %ebp$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	53                   	push   %ebx$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	8b 1d 40 a2 22 f0    	mov    0xf022a240,%ebx$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	85 db                	test   %ebx,%ebx$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	74 58                	je     f0100f9f <page_alloc+0x69>$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	74 45                	je     f0100f9f <page_alloc+0x69>$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	89 c2                	mov    %eax,%edx$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	72 12                	jb     f0100f87 <page_alloc+0x51>$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	50                   	push   %eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	6a 58                	push   $0x58$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	68 81 66 10 f0       	push   $0xf0106681$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	e8 0d f1 ff ff       	call   f0100094 <_panic>$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	6a 00                	push   $0x0$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	50                   	push   %eax$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	e8 53 3b 00 00       	call   f0104aef <memset>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	c9                   	leave  $/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	c3                   	ret    $/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6 <page_free>:$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	55                   	push   %ebp$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	75 05                	jne    f0100fbb <page_free+0x15>$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	74 17                	je     f0100fd2 <page_free+0x2c>$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	68 14 5e 10 f0       	push   $0xf0105e14$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	68 71 01 00 00       	push   $0x171$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	e8 c2 f0 ff ff       	call   f0100094 <_panic>$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	8b 15 40 a2 22 f0    	mov    0xf022a240,%edx$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	89 10                	mov    %edx,(%eax)$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	c9                   	leave  $/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	c3                   	ret    $/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1 <page_decref>:$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	55                   	push   %ebp$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	66 85 c0             	test   %ax,%ax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	75 0c                	jne    f0101006 <page_decref+0x25>$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	52                   	push   %edx$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	e8 a3 ff ff ff       	call   f0100fa6 <page_free>$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	c9                   	leave  $/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	c3                   	ret    $/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008 <pgdir_walk>:$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	55                   	push   %ebp$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	89 e5                	mov    %esp,%ebp$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	56                   	push   %esi$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	53                   	push   %ebx$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	89 de                	mov    %ebx,%esi$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	8b 06                	mov    (%esi),%eax$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	85 c0                	test   %eax,%eax$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	75 70                	jne    f0101091 <pgdir_walk+0x89>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	0f 84 9f 00 00 00    	je     f01010ca <pgdir_walk+0xc2>$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	6a 01                	push   $0x1$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	e8 01 ff ff ff       	call   f0100f36 <page_alloc>$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	85 c0                	test   %eax,%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	0f 84 91 00 00 00    	je     f01010d1 <pgdir_walk+0xc9>$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	89 c2                	mov    %eax,%edx$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	89 16                	mov    %edx,(%esi)$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	89 c2                	mov    %eax,%edx$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	39 15 08 af 22 f0    	cmp    %edx,0xf022af08$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	77 15                	ja     f010107f <pgdir_walk+0x77>$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	50                   	push   %eax$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	68 aa 01 00 00       	push   $0x1aa$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	e8 15 f0 ff ff       	call   f0100094 <_panic>$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	eb 45                	jmp    f01010d6 <pgdir_walk+0xce>$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	89 c2                	mov    %eax,%edx$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	72 15                	jb     f01010b8 <pgdir_walk+0xb0>$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	50                   	push   %eax$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	68 60 58 10 f0       	push   $0xf0105860$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	68 b0 01 00 00       	push   $0x1b0$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	e8 dc ef ff ff       	call   f0100094 <_panic>$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	eb 0c                	jmp    f01010d6 <pgdir_walk+0xce>$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	eb 05                	jmp    f01010d6 <pgdir_walk+0xce>$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	5b                   	pop    %ebx$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	5e                   	pop    %esi$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	5d                   	pop    %ebp$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	c3                   	ret    $/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd <boot_map_region>:$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	55                   	push   %ebp$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	89 e5                	mov    %esp,%ebp$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	57                   	push   %edi$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	56                   	push   %esi$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	53                   	push   %ebx$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	89 c7                	mov    %eax,%edi$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	89 d6                	mov    %edx,%esi$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	83 c8 01             	or     $0x1,%eax$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	eb 22                	jmp    f010111f <boot_map_region+0x42>$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	6a 01                	push   $0x1$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	50                   	push   %eax$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	57                   	push   %edi$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	e8 fc fe ff ff       	call   f0101008 <pgdir_walk>$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	89 da                	mov    %ebx,%edx$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	03 55 08             	add    0x8(%ebp),%edx$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	0b 55 e0             	or     -0x20(%ebp),%edx$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	89 10                	mov    %edx,(%eax)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	77 d9                	ja     f01010fd <boot_map_region+0x20>$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	5b                   	pop    %ebx$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	5e                   	pop    %esi$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	5f                   	pop    %edi$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	5d                   	pop    %ebp$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	c3                   	ret    $/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c <page_lookup>:$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	55                   	push   %ebp$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	89 e5                	mov    %esp,%ebp$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	53                   	push   %ebx$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	6a 00                	push   $0x0$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	e8 c5 fe ff ff       	call   f0101008 <pgdir_walk>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	85 db                	test   %ebx,%ebx$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	74 02                	je     f010114c <page_lookup+0x20>$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	89 03                	mov    %eax,(%ebx)$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	85 c0                	test   %eax,%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	74 30                	je     f0101180 <page_lookup+0x54>$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	8b 00                	mov    (%eax),%eax$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	a8 01                	test   $0x1,%al$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	74 31                	je     f0101187 <page_lookup+0x5b>$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	3b 05 08 af 22 f0    	cmp    0xf022af08,%eax$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	72 14                	jb     f0101175 <page_lookup+0x49>$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	68 3c 5e 10 f0       	push   $0xf0105e3c$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	6a 51                	push   $0x51$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	68 81 66 10 f0       	push   $0xf0106681$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	e8 1f ef ff ff       	call   f0100094 <_panic>$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	8b 15 10 af 22 f0    	mov    0xf022af10,%edx$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	eb 0c                	jmp    f010118c <page_lookup+0x60>$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	eb 05                	jmp    f010118c <page_lookup+0x60>$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	c9                   	leave  $/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	c3                   	ret    $/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191 <tlb_invalidate>:$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	55                   	push   %ebp$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	89 e5                	mov    %esp,%ebp$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	e8 76 3f 00 00       	call   f0105112 <cpunum>$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	74 16                	je     f01011be <tlb_invalidate+0x2d>$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	e8 65 3f 00 00       	call   f0105112 <cpunum>$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	75 06                	jne    f01011c4 <tlb_invalidate+0x33>$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	0f 01 38             	invlpg (%eax)$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	c9                   	leave  $/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	c3                   	ret    $/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6 <page_remove>:$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	55                   	push   %ebp$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	56                   	push   %esi$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	53                   	push   %ebx$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	50                   	push   %eax$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	56                   	push   %esi$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	53                   	push   %ebx$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	e8 46 ff ff ff       	call   f010112c <page_lookup>$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	85 c0                	test   %eax,%eax$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	74 1f                	je     f010120c <page_remove+0x46>$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	50                   	push   %eax$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	e8 eb fd ff ff       	call   f0100fe1 <page_decref>$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	56                   	push   %esi$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	53                   	push   %ebx$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	e8 91 ff ff ff       	call   f0101191 <tlb_invalidate>$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	83 c4 10             	add    $0x10,%esp$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	5b                   	pop    %ebx$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	5e                   	pop    %esi$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	5d                   	pop    %ebp$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	c3                   	ret    $/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213 <page_insert>:$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	55                   	push   %ebp$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	89 e5                	mov    %esp,%ebp$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	57                   	push   %edi$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	56                   	push   %esi$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	53                   	push   %ebx$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	6a 01                	push   $0x1$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	57                   	push   %edi$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	e8 db fd ff ff       	call   f0101008 <pgdir_walk>$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	85 c0                	test   %eax,%eax$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	74 38                	je     f010126c <page_insert+0x59>$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	89 c6                	mov    %eax,%esi$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	74 0f                	je     f010124f <page_insert+0x3c>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	57                   	push   %edi$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	e8 7a ff ff ff       	call   f01011c6 <page_remove>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	2b 1d 10 af 22 f0    	sub    0xf022af10,%ebx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	09 c3                	or     %eax,%ebx$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	eb 05                	jmp    f0101271 <page_insert+0x5e>$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	5b                   	pop    %ebx$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	5e                   	pop    %esi$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	5f                   	pop    %edi$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	5d                   	pop    %ebp$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	c3                   	ret    $/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279 <mmio_map_region>:$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	55                   	push   %ebp$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	89 e5                	mov    %esp,%ebp$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	8d 88 ff 0f 00 00    	lea    0xfff(%eax),%ecx$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	6a 1a                	push   $0x1a$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	ba 00 00 80 ef       	mov    $0xef800000,%edx$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	e8 3b fe ff ff       	call   f01010dd <boot_map_region>$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	c9                   	leave  $/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	c3                   	ret    $/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9 <mem_init>:$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	55                   	push   %ebp$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	57                   	push   %edi$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	56                   	push   %esi$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	53                   	push   %ebx$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	e8 1c f8 ff ff       	call   f0100ad8 <nvram_read>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	89 c3                	mov    %eax,%ebx$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	e8 10 f8 ff ff       	call   f0100ad8 <nvram_read>$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	89 c6                	mov    %eax,%esi$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	e8 04 f8 ff ff       	call   f0100ad8 <nvram_read>$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	85 c0                	test   %eax,%eax$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	74 07                	je     f01012e2 <mem_init+0x39>$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	eb 0b                	jmp    f01012ed <mem_init+0x44>$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	85 f6                	test   %esi,%esi$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	89 c2                	mov    %eax,%edx$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	89 15 08 af 22 f0    	mov    %edx,0xf022af08$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	89 da                	mov    %ebx,%edx$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	89 15 44 a2 22 f0    	mov    %edx,0xf022a244$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	89 c2                	mov    %eax,%edx$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	29 da                	sub    %ebx,%edx$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	52                   	push   %edx$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	53                   	push   %ebx$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	50                   	push   %eax$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	68 5c 5e 10 f0       	push   $0xf0105e5c$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	e8 bb 22 00 00       	call   f01035cf <cprintf>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	e8 80 f7 ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	a3 0c af 22 f0       	mov    %eax,0xf022af0c$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	68 00 10 00 00       	push   $0x1000$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	6a 00                	push   $0x0$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	50                   	push   %eax$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	e8 bc 37 00 00       	call   f0104aef <memset>$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	83 c4 10             	add    $0x10,%esp$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	77 15                	ja     f0101357 <mem_init+0xae>$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	50                   	push   %eax$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	68 84 58 10 f0       	push   $0xf0105884$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	68 91 00 00 00       	push   $0x91$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	68 75 66 10 f0       	push   $0xf0106675$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	e8 3d ed ff ff       	call   f0100094 <_panic>$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	a1 08 af 22 f0       	mov    0xf022af08,%eax$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	e8 2b f7 ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	a3 10 af 22 f0       	mov    %eax,0xf022af10$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	8b 0d 08 af 22 f0    	mov    0xf022af08,%ecx$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	52                   	push   %edx$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	6a 00                	push   $0x0$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	50                   	push   %eax$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	e8 5e 37 00 00       	call   f0104aef <memset>$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	e8 03 f7 ff ff       	call   f0100a9e <boot_alloc>$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	a3 48 a2 22 f0       	mov    %eax,0xf022a248$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	e8 c2 fa ff ff       	call   f0100e67 <page_init>$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	e8 b6 f7 ff ff       	call   f0100b65 <check_page_free_list>$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	83 3d 10 af 22 f0 00 	cmpl   $0x0,0xf022af10$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	75 17                	jne    f01013d2 <mem_init+0x129>$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	68 48 67 10 f0       	push   $/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^    nextfree = ROUNDUP((char *)nextfree + n,PGSIZE); $/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap,lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap,lflag);$/;"	d
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/kern/kernel.asm	/^            p = page_alloc(true);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^            page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^        page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^        page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^    pages = (struct PageInfo*)boot_alloc(sizeof(struct PageInfo)*npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^    result = nextfree;$/;"	d
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/badsegment.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/breakpoint.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello2.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/divzero.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/dumbfork.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/evilhello.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/fairness.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultalloc.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultallocbad.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultdie.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultnostack.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultread.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultregs.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwrite.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/forktree.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/hello.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/idle.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/pingpong.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/pingpongs.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/primes.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/sendpage.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/softint.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/spin.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/stresssched.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testbss.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/yield.asm	/^    thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
